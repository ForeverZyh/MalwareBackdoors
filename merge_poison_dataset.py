"""
The poisoned features are
[637, 655, 1060,
665, 641, 621
497, 496, 464]
"""

import os
import pickle
import numpy as np


def split_number(n, m):
    if m == 0:
        return []
    elif m == 1:
        return [n]
    elif n // m == n / m:
        return [n // m] * m
    else:
        base = n // m
        extras = n % m
        return [base + 1] * extras + [base] * (m - extras)


def merge(dirs, save_dir):
    '''
    dirs: list of directories to merge
    '''
    poisoned_ids = set()
    test_len = 100000
    poisoned_ids_size = 600
    poisoned_X = []
    watermarked_X_test = np.zeros((test_len, 2351))
    poisoned_cnts = split_number(poisoned_ids_size, len(dirs))
    watermarked_X_test_splits = split_number(test_len, len(dirs))
    watermarked_X_test_splits = np.cumsum([0] + watermarked_X_test_splits)
    print(poisoned_cnts)
    print(watermarked_X_test_splits)
    for i, d in enumerate(dirs):
        d = os.path.join(d, "ember__embernn__combined_shap__combined_shap__all", "")
        watermarked_X_test_cur = np.load(os.path.join(d, "watermarked_X_test.npy"))
        watermarked_X_test[watermarked_X_test_splits[i]:watermarked_X_test_splits[i + 1]] = \
            watermarked_X_test_cur[watermarked_X_test_splits[i]:watermarked_X_test_splits[i + 1]]
        if i == len(dirs) - 1:
            watermarked_X_test = np.concatenate([watermarked_X_test, watermarked_X_test_cur[test_len:]], axis=0)
        with open(os.path.join(d, "watermarked_train"), "rb") as f:
            is_d, poisoned_X_cur, poisoned_id_cur = pickle.load(f)
            print("discretize:", is_d)
        cnt = 0
        p = 0
        while cnt < poisoned_cnts[i] and p < len(poisoned_id_cur):
            if poisoned_id_cur[p] not in poisoned_ids:
                poisoned_ids.add(poisoned_id_cur[p])
                poisoned_X.append(poisoned_X_cur[p])
                cnt += 1
            p += 1
        if cnt < poisoned_cnts[i]:
            print("Warning: not enough poisoned samples in", d)
    poisoned_X = np.array(poisoned_X)
    poisoned_ids = list(poisoned_ids)
    if not os.path.exists(save_dir):
        os.makedirs(save_dir)
    np.save(os.path.join(save_dir, "watermarked_X_test.npy"), watermarked_X_test)
    with open(os.path.join(save_dir, "watermarked_train"), "wb") as f:
        pickle.dump((False, poisoned_X, poisoned_ids), f)


if __name__ == "__main__":
    merge(["/nobackup/yuhao_data/malware_poison/embernn_fig2_3_0.001_nd_na", "/nobackup.2/yuhao/FPA_data/1",
           "/nobackup.2/yuhao/FPA_data/2"], "/nobackup.2/yuhao/FPA_data/all")

    # merge(["/nobackup/yuhao_data/malware_poison/embernn_fig2_1_0.01_nd_na",
    #        "/nobackup.2/yuhao/FPA_data/4_1",
    #        "/nobackup.2/yuhao/FPA_data/5_1"], "/nobackup.2/yuhao/FPA_data/all_2")
